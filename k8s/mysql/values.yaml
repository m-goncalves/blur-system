## Bitnami MySQL chart
## ref: https://github.com/bitnami/charts/tree/master/bitnami/mysql
image:
  registry: docker.io
  repository: bitnami/mysql
  tag: 8.0.22-debian-10-r23
  pullPolicy: IfNotPresent
  pullSecrets: []
  debug: false
clusterDomain: cluster.local
commonAnnotations: {}
commonLabels: {}
architecture: replication
auth:
  replicationUser: replicator
  existingSecret: mysql
  forcePassword: true
  usePasswordFiles: true
  customPasswordFiles: {}
initdbScripts: {}
primary:
  command: []
  args: []
  configuration: |-
    [mysqld]
    default_authentication_plugin=mysql_native_password
    skip-name-resolve
    explicit_defaults_for_timestamp
    basedir=/opt/bitnami/mysql
    plugin_dir=/opt/bitnami/mysql/plugin
    port=3306
    socket=/opt/bitnami/mysql/tmp/mysql.sock
    datadir=/bitnami/mysql/data
    tmpdir=/opt/bitnami/mysql/tmp
    max_allowed_packet=16M
    bind-address=0.0.0.0
    pid-file=/opt/bitnami/mysql/tmp/mysqld.pid
    log-error=/opt/bitnami/mysql/logs/mysqld.log
    character-set-server=UTF8
    collation-server=utf8_general_ci
    [client]
    port=3306
    socket=/opt/bitnami/mysql/tmp/mysql.sock
    default-character-set=UTF8
    plugin_dir=/opt/bitnami/mysql/plugin
    [manager]
    port=3306
    socket=/opt/bitnami/mysql/tmp/mysql.sock
    pid-file=/opt/bitnami/mysql/tmp/mysqld.pid
  updateStrategy: RollingUpdate
  podAntiAffinityPreset: soft
  podSecurityContext:
    enabled: true
    fsGroup: 1001
  containerSecurityContext:
    enabled: true
    runAsUser: 1001
  livenessProbe:
    enabled: true
    initialDelaySeconds: 120
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3
    successThreshold: 1
  readinessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3
    successThreshold: 1
  persistence:
    enabled: true
    accessModes:
      - ReadWriteOnce
    size: 1Gi
  service:
    type: ClusterIP
    port: 3306
    nodePort: "" 
    clusterIP: ""
    annotations: {}
  pdb:
    create: false
    minAvailable: 1
secondary:
  replicaCount: 1
  command: []
  args: []
  configuration: |-
    [mysqld]
    default_authentication_plugin=mysql_native_password
    skip-name-resolve
    explicit_defaults_for_timestamp
    basedir=/opt/bitnami/mysql
    port=3306
    socket=/opt/bitnami/mysql/tmp/mysql.sock
    datadir=/bitnami/mysql/data
    tmpdir=/opt/bitnami/mysql/tmp
    max_allowed_packet=16M
    bind-address=0.0.0.0
    pid-file=/opt/bitnami/mysql/tmp/mysqld.pid
    log-error=/opt/bitnami/mysql/logs/mysqld.log
    character-set-server=UTF8
    collation-server=utf8_general_ci
    [client]
    port=3306
    socket=/opt/bitnami/mysql/tmp/mysql.sock
    default-character-set=UTF8
    [manager]
    port=3306
    socket=/opt/bitnami/mysql/tmp/mysql.sock
    pid-file=/opt/bitnami/mysql/tmp/mysqld.pid
  updateStrategy: RollingUpdate
  podAntiAffinityPreset: soft
  podSecurityContext:
    enabled: true
    fsGroup: 1001
  containerSecurityContext:
    enabled: true
    runAsUser: 1001
  livenessProbe:
    enabled: true
    initialDelaySeconds: 120
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3
    successThreshold: 1
  readinessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3
    successThreshold: 1
  persistence:
    enabled: true
    accessModes:
      - ReadWriteOnce
    size: 1Gi
  service:
    type: ClusterIP
    port: 3306
    nodePort: ""
    clusterIP: ""
  pdb:
    create: false
    minAvailable: 1
serviceAccount:
  create: true
rbac:
  create: false
volumePermissions:
  enabled: false
  image:
    registry: docker.io
    repository: bitnami/minideb
    tag: buster
    pullPolicy: Always
metrics:
  enabled: true
  image:
    registry: docker.io
    repository: bitnami/mysqld-exporter
    tag: 0.12.1-debian-10-r264
    pullPolicy: IfNotPresent
## MySQL Prometheus exporter service parameters
## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes  ##
  service:
    type: ClusterIP
    port: 9104
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "{{ .Values.metrics.service.port }}"
## Extra args must be placed here
## ref: https://github.com/prometheus/mysqld_exporter/
  ## - --collect.auto_increment.columns
  # extraArgs:
  #   primary: []
  #   secondary: []
## Mysqld Prometheus exporter liveness and readiness probes
  livenessProbe:
    enabled: true
    initialDelaySeconds: 120
    periodSeconds: 10
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 3
  readinessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 3
  ## Prometheus Service Monitor
  serviceMonitor:
    enabled: true
    namespace: "default"
    interval: 30s
    honorLabels: false
    release: "prometheus"
    additionalLabels:
      release: "prometheus"